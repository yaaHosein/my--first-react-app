{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\my--first-react-app\\\\src\\\\Flowers.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Flowers(props) {\n  _s();\n\n  let [isShow, setIsShow] = useState(true);\n  let buttonText = null;\n\n  if (isShow) {\n    buttonText = \"Hide\";\n  } else {\n    buttonText = \"Show\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsShow(!isShow);\n      },\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), isShow && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), \";\", isShow && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), \";\", isShow && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.imageSource,\n      alt: props.imageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Flowers, \"VKeQRMS3cYCGmVzGMfdUDeRDOnc=\");\n\n_c = Flowers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flowers\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my--first-react-app/src/Flowers.js"],"names":["useState","Flowers","props","isShow","setIsShow","buttonText","description","title","imageSource","imageName"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAC3B,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,MAAIK,UAAU,GAAG,IAAjB;;AACA,MAAIF,MAAJ,EAAY;AACRE,IAAAA,UAAU,GAAG,MAAb;AACH,GAFD,MAEO;AACHA,IAAAA,UAAU,GAAG,MAAb;AACH;;AACD,sBAAQ;AAAA,4BACJ;AACI,MAAA,OAAO,EAAE,MAAM;AACXD,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,OAHL;AAAA,gBAIKE;AAJL;AAAA;AAAA;AAAA;AAAA,YADI,EAOHF,MAAM,iBACH;AAAA,gBAAID,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YARA,OAWHH,MAAM,iBACH;AAAA,gBAAKD,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,YAZA,OAeHJ,MAAM,iBACH;AAAK,MAAA,GAAG,EAAED,KAAK,CAACM,WAAhB;AAA6B,MAAA,GAAG,EAAEN,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBH;;GA7BeR,O;;KAAAA,O","sourcesContent":["import { useState } from \"react\"\r\nexport function Flowers(props) {\r\n    let [isShow, setIsShow] = useState(true);\r\n    let buttonText = null;\r\n    if (isShow) {\r\n        buttonText = \"Hide\"\r\n    } else {\r\n        buttonText = \"Show\"\r\n    }\r\n    return (<div>\r\n        <button\r\n            onClick={() => {\r\n                setIsShow(!isShow);\r\n            }}>\r\n            {buttonText}\r\n        </button>\r\n        {isShow && (\r\n            <p>{props.description}</p>\r\n\r\n        )};\r\n        {isShow && (\r\n            <h3>{props.title}</h3>\r\n\r\n        )};\r\n        {isShow && (\r\n            <img src={props.imageSource} alt={props.imageName} />\r\n        )};\r\n\r\n\r\n    </div >)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}